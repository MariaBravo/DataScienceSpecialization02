class(zz)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?llpoints
library(lattice)
?llpoints
?lpoints
?axis
?text
?lines
?lpoints
?axis
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
trellis.par.set
?trellis.par.set
?print.tellis
?par
?splom
library(datasets)
data(airquality)
head(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = factor(Month) ~.)
airquality
? facets
library(ggplot2)
? facets
qplot(Wind, Ozone, data = airquality, facets = factor(Month) ~.)
airquality
str(airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, smooth = "loess")
?smooth
qplot(votes, rating, data = movies) + geom_smooth()
?geom_smooth
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + stat_smooth("loess")
pnorm(70,80,10)
qnorm(0.95,1100,75)
qnorm(0.95,1100,7.5)
r6 <- pbinom(4, 5, 0.5,)
r6 <- pbinom(4, 5, 0.5)
pbinom(4, 5, 0.5)
pbinom(4, 5, 0.5, lower.tail=F)
pbinom(3, 5, 0.5, lower.tail=F)
pbinom(4, prob = .5, size = 6, lower.tail = TRUE)
pbinom(4, 6, 0.5, lower.tail = TRUE)
pbinom(3, 5, 0.5, lower.tail=TRUE)
pbinom(3, 5, 0.5, lower.tail=FALSE)
ppois(10,15)
ppois(3, lambda = 2.5 * 4)
ppois(10,15)
library(data.table)
f <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2", f)
datZero <- data.table(read.csv(bzfile(f)))
# cutting years until 1996 and comments, adding formatted date
dat1 <- datZero[year(strptime( datZero[["BGN_DATE"]] , "%m/%d/%Y %H:%M:%S")) >= 1996]
dat1 <- dat1[, c("STATE__", "BGN_DATE", "COUNTY", "COUNTYNAME", "STATE",
"EVTYPE", "END_DATE", "FATALITIES", "INJURIES", "PROPDMG",
"PROPDMGEXP", "CROPDMG", "CROPDMGEXP") , with = FALSE]
dat1 <- dat1[, bgn_date2:= as.Date(strptime( dat1$BGN_DATE, "%m/%d/%Y %H:%M:%S")) ]
dat1 <- dat1[, bgn_year:= year(bgn_date2) ]
dat1[as.character(dat1$PROPDMGEXP) == "0" & "PROPDMG" > 0, propdmg2 := PROPDMG*1]
dat1[as.character(dat1$PROPDMGEXP) == "K" & "PROPDMG" > 0, propdmg2 := PROPDMG*1000]
dat1[as.character(dat1$PROPDMGEXP) == "M" & "PROPDMG" > 0, propdmg2 := PROPDMG*1000000]
dat1[as.character(dat1$PROPDMGEXP) == "B" & "PROPDMG" > 0, propdmg2 := PROPDMG*1000000000]
dat1[as.character(dat1$CROPDMGEXP) == "0" & "CROPDMG" > 0, cropdmg2 := CROPDMG*1]
dat1[as.character(dat1$CROPDMGEXP) == "K" & "CROPDMG" > 0, cropdmg2 := CROPDMG*1000]
dat1[as.character(dat1$CROPDMGEXP) == "M" & "CROPDMG" > 0, cropdmg2 := CROPDMG*1000000]
dat1[as.character(dat1$CROPDMGEXP) == "B" & "CROPDMG" > 0, cropdmg2 := CROPDMG*1000000000]
datTotEvent <- dat1[order(EVTYPE, bgn_year)]
datTotEvent <- datTotEvent[, by="EVTYPE",
`:=` (totFATALITIES=sum(FATALITIES), totINJURIES=sum(INJURIES),
totPROPDMG=sum(propdmg2), totCROPDMG=sum(cropdmg2))]
datTotEvent <- unique(datTotEvent, by = "EVTYPE")
datTotYear <- dat1[order(bgn_year, EVTYPE)]
datTotYear <- datTotYear[, by=year(dat1$bgn_date2),
`:=` (totFATALITIES=sum(FATALITIES), totINJURIES=sum(INJURIES),
totPROPDMG=sum(propdmg2), totCROPDMG=sum(cropdmg2))]
datTotYear <- unique(datTotYear, by = "bgn_year")
datQ1 <- datTotEvent[order(totFATALITIES, totINJURIES, decreasing = TRUE)]
datQ1 <- datQ1[totFATALITIES > 0,]
datQ1 <- datQ1[order(totFATALITIES, decreasing = TRUE)]
levelsQ1 <- datQ1[,c("EVTYPE", "totFATALITIES"), with=FALSE]
levelsQ1 <- levelsQ1[order(totFATALITIES, decreasing=TRUE)]
levelsQ1 <- levelsQ1[["EVTYPE"]]
datQ1 <- transform(datQ1, EVTYPE = factor(EVTYPE, levels = levelsQ1))
datQ1 <- head(datQ1,10)
datQ2 <- datTotEvent[order(totPROPDMG, totCROPDMG, decreasing = TRUE)]
datQ2 <- datQ2[totPROPDMG > 0 | totCROPDMG > 0,]
datQ2 <- datQ2[order(totPROPDMG, totCROPDMG, decreasing = TRUE)]
levelsQ2 <- datQ2[,c("EVTYPE", "totPROPDMG", "totCROPDMG"), with=FALSE]
levelsQ2 <- levelsQ2[order(totPROPDMG, totCROPDMG, decreasing=TRUE)]
levelsQ2 <- levelsQ2[["EVTYPE"]]
datQ2 <- transform(datQ2, EVTYPE = factor(EVTYPE, levels = levelsQ2))
datQ2 <- head(datQ2,10)
View(datQ1)
View(dat1)
head(datZero)
dat1 <- datZero[year(strptime( datZero[["BGN_DATE"]] , "%m/%d/%Y %H:%M:%S")) >= 1996]
dat1 <- dat1[, c("LATITUDE", "LONGITUDE", "STATE__", "BGN_DATE", "COUNTY", "COUNTYNAME", "STATE",
"EVTYPE", "END_DATE", "FATALITIES", "INJURIES", "PROPDMG",
"PROPDMGEXP", "CROPDMG", "CROPDMGEXP") , with = FALSE]
dat1 <- dat1[, bgn_date2:= as.Date(strptime( dat1$BGN_DATE, "%m/%d/%Y %H:%M:%S")) ]
dat1 <- dat1[, bgn_year:= year(bgn_date2) ]
dat1[as.character(dat1$PROPDMGEXP) == "0" & "PROPDMG" > 0, propdmg2 := PROPDMG*1]
dat1[as.character(dat1$PROPDMGEXP) == "K" & "PROPDMG" > 0, propdmg2 := PROPDMG*1000]
dat1[as.character(dat1$PROPDMGEXP) == "M" & "PROPDMG" > 0, propdmg2 := PROPDMG*1000000]
dat1[as.character(dat1$PROPDMGEXP) == "B" & "PROPDMG" > 0, propdmg2 := PROPDMG*1000000000]
dat1[as.character(dat1$CROPDMGEXP) == "0" & "CROPDMG" > 0, cropdmg2 := CROPDMG*1]
dat1[as.character(dat1$CROPDMGEXP) == "K" & "CROPDMG" > 0, cropdmg2 := CROPDMG*1000]
dat1[as.character(dat1$CROPDMGEXP) == "M" & "CROPDMG" > 0, cropdmg2 := CROPDMG*1000000]
dat1[as.character(dat1$CROPDMGEXP) == "B" & "CROPDMG" > 0, cropdmg2 := CROPDMG*1000000000]
datTotEvent <- dat1[order(EVTYPE, bgn_year)]
datTotEvent <- datTotEvent[, by="EVTYPE",
`:=` (totFATALITIES=sum(FATALITIES), totINJURIES=sum(INJURIES),
totPROPDMG=sum(propdmg2), totCROPDMG=sum(cropdmg2))]
datTotEvent <- unique(datTotEvent, by = "EVTYPE")
datTotYear <- dat1[order(bgn_year, EVTYPE)]
datTotYear <- datTotYear[, by=year(dat1$bgn_date2),
`:=` (totFATALITIES=sum(FATALITIES), totINJURIES=sum(INJURIES),
totPROPDMG=sum(propdmg2), totCROPDMG=sum(cropdmg2))]
datTotYear <- unique(datTotYear, by = "bgn_year")
datQ1 <- datTotEvent[order(totFATALITIES, totINJURIES, decreasing = TRUE)]
datQ1 <- datQ1[totFATALITIES > 0,]
datQ1 <- datQ1[order(totFATALITIES, decreasing = TRUE)]
levelsQ1 <- datQ1[,c("EVTYPE", "totFATALITIES"), with=FALSE]
levelsQ1 <- levelsQ1[order(totFATALITIES, decreasing=TRUE)]
levelsQ1 <- levelsQ1[["EVTYPE"]]
datQ1 <- transform(datQ1, EVTYPE = factor(EVTYPE, levels = levelsQ1))
datQ1 <- head(datQ1,10)
datQ2 <- datTotEvent[order(totPROPDMG, totCROPDMG, decreasing = TRUE)]
datQ2 <- datQ2[totPROPDMG > 0 | totCROPDMG > 0,]
datQ2 <- datQ2[order(totPROPDMG, totCROPDMG, decreasing = TRUE)]
levelsQ2 <- datQ2[,c("EVTYPE", "totPROPDMG", "totCROPDMG"), with=FALSE]
levelsQ2 <- levelsQ2[order(totPROPDMG, totCROPDMG, decreasing=TRUE)]
levelsQ2 <- levelsQ2[["EVTYPE"]]
datQ2 <- transform(datQ2, EVTYPE = factor(EVTYPE, levels = levelsQ2))
datQ2 <- head(datQ2,10)
View(datQ2)
NAMES(DAT1)
names(dat1)
dat1[, LATITUDE > 0]
Z <- dat1[, LATITUDE > 0]
sum(Z)
Z
sum(Z)
str(Z)
View(dat1)
mn <- 1100
n <- 9
s <- 30
mn + c(-1,1)*qt(0.95, n-1) * s/sqrt(n)
library(datasets); data(mtcars)
round(t.test(mtcars$mpg)$conf.int)
attr
t.test(mtcars$mpg)$conf.int
round(mn + c(-1,1)*qt(0.95, n-1) * s/sqrt(n))
mn <- 1100
n <- 9
s <- 30
mn + c(-1,1)*qt(0.95, n-1) * s/sqrt(n)
mn <- 1100
n <- 9
s <- 30
mn + c(-1,1)*qt(0.95, n) * s/sqrt(n)
mn <- 1100
n <- 9
s <- 30
mn + c(-1,1)*qt(0.025, n-1) * s/sqrt(n)
# Q4 T conf.int
pooledVariance <- function(v, n, sq.root = FALSE){
res <- sum((n-1)*v)/(sum(n) - 2)
if (sq.root) {
return(sqrt(res))
}
return(res)
}
confintPool <- function(m, v, n){
spool <- pooledVariance(v, n, T)
res <- m + c(-1, 1)*spool*qt(0.975, sum(n)-2)*sqrt(sum(1/n))
return(res)
}
confintPool
qnorm(0.95,1100,sqrt(75/100))
qnorm(0.95,mean=1100,sd = 75/10)
pbinom(3,size=5,prob=0.5)
pbinom(3,size=5,prob=0.5, lower.tail=FALSE)
ppois(10, 15)
choose(9,3)
setwd("C:/Users/Luchy/Desktop/Coursera/Reproducible Research")
pwd
library(data.table)
library(ggplot2)
library(xtable)
# The palette
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7", "gold", "green3")
# To use for fills
v <- scale_fill_manual(values=cbPalette)
# To use for line and point colors
v<- scale_colour_manual(values=cbPalette)
setInternet2(TRUE)
f <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2", f)
datZero <- data.table(read.csv(bzfile(f)))
dat1 <- datZero[year(strptime( datZero[["BGN_DATE"]] , "%m/%d/%Y %H:%M:%S")) >= 1996]
dat1 <- dat1[, c("BGN_DATE", "STATE",
"EVTYPE", "FATALITIES", "INJURIES", "PROPDMG",
"PROPDMGEXP", "CROPDMG", "CROPDMGEXP") , with = FALSE]
nrow(dat1[ FATALITIES == 0 & INJURIES == 0 & PROPDMG == 0 & CROPDMG == 0])
dat1 <- dat1[ FATALITIES > 0 | INJURIES > 0 | PROPDMG > 0 | CROPDMG > 0, ]
dat1 <- dat1[, bgn_date2:= as.Date(strptime( dat1$BGN_DATE, "%m/%d/%Y %H:%M:%S")) ]
dat1 <- dat1[, bgn_year:= year(bgn_date2) ]
dat1 <- dat1[, propdmg0:= 0]
dat1 <- dat1[, propdmgK:= 0]
dat1 <- dat1[, propdmgM:= 0]
dat1 <- dat1[, propdmgB:= 0]
dat1 <- dat1[as.character(dat1$PROPDMGEXP) == "0" & "PROPDMG" > 0, propdmg0 := PROPDMG*1]
dat1 <- dat1[as.character(dat1$PROPDMGEXP) == "K" & "PROPDMG" > 0, propdmgK := PROPDMG*1000]
dat1 <- dat1[as.character(dat1$PROPDMGEXP) == "M" & "PROPDMG" > 0, propdmgM := PROPDMG*1000000]
dat1 <- dat1[as.character(dat1$PROPDMGEXP) == "B" & "PROPDMG" > 0, propdmgB := PROPDMG*1000000000]
dat1 <- dat1[is.na(dat1$propdmg0), propdmg0:=0]
dat1 <- dat1[is.na(dat1$propdmgK), propdmgK:=0]
dat1 <- dat1[is.na(dat1$propdmgM), propdmgM:=0]
dat1 <- dat1[is.na(dat1$propdmgB), propdmgB:=0]
dat1 <- dat1[, cropdmg0:= 0]
dat1 <- dat1[, cropdmgK:= 0]
dat1 <- dat1[, cropdmgM:= 0]
dat1 <- dat1[, cropdmgB:= 0]
dat1 <- dat1[as.character(dat1$CROPDMGEXP) == "0" & "CROPDMG" > 0, cropdmg0 := CROPDMG*1]
dat1 <- dat1[as.character(dat1$CROPDMGEXP) == "K" & "CROPDMG" > 0, cropdmgK := CROPDMG*1000]
dat1 <- dat1[as.character(dat1$CROPDMGEXP) == "M" & "CROPDMG" > 0, cropdmgM := CROPDMG*1000000]
dat1 <- dat1[as.character(dat1$CROPDMGEXP) == "B" & "CROPDMG" > 0, cropdmgB := CROPDMG*1000000000]
dat1 <- dat1[is.na(dat1$cropdmg0), cropdmg0:=0]
dat1 <- dat1[is.na(dat1$cropdmgK), cropdmgK:=0]
dat1 <- dat1[is.na(dat1$cropdmgM), cropdmgM:=0]
dat1 <- dat1[is.na(dat1$cropdmgB), cropdmgB:=0]
datTotEvent <- dat1[order(EVTYPE, bgn_year)]
datTotEvent <- datTotEvent[, by="EVTYPE",
`:=` (totFATALITIES=sum(FATALITIES), totINJURIES=sum(INJURIES),
totPROPDMG = sum(propdmg0/1000000) +
sum(propdmgK/1000000) +
sum(propdmgM/1000000) +
sum(propdmgB/1000000),
totCROPDMG = sum(cropdmg0/1000000) +
sum(cropdmgK/1000000) +
sum(cropdmgM/1000000) +
sum(cropdmgB/1000000))]
datTotEvent <- unique(datTotEvent, by = "EVTYPE")
datTotTime <- dat1[order(bgn_year)]
datTotTime <- datTotTime[, by="bgn_year",
`:=` (totFATALITIES=sum(FATALITIES), totINJURIES=sum(INJURIES),
totPROPDMG = sum(propdmg0/1000000) +
sum(propdmgK/1000000) +
sum(propdmgM/1000000) +
sum(propdmgB/1000000),
totCROPDMG = sum(cropdmg0/1000000) +
sum(cropdmgK/1000000) +
sum(cropdmgM/1000000) +
sum(cropdmgB/1000000))]
datTotTime <- datTotTime[, totECONDMG := totPROPDMG + totCROPDMG]
datTotTime <- unique(datTotTime, by = "bgn_year")
datTotTime <- datTotTime[,list(bgn_year,totFATALITIES,
totINJURIES,totECONDMG)]
setnames(datTotTime, c("Year", "Fatalities", "Injuries", "TotalEconomicDamage_Million$"))
with(datTotYear, plot(bgn_year, TotalEconomicDamage_Million$, pch = NA, type="l",
ylab="Average",
xlab = "Interval"))
lines(datTotYear$bgn_year, datTotYear$TotalEconomicDamage_Million$, col = "blue", lwd = 2)
setnames(datTotTime, c("Year", "Fatalities", "Injuries", "TotalEconomicDamage"))
with(datTotYear, plot(bgn_year, TotalEconomicDamage, pch = NA, type="l",
ylab="Average",
xlab = "Interval"))
lines(datTotYear$bgn_year, datTotYear$TotalEconomicDamage, col = "blue", lwd = 2)
setnames(datTotTime, c("Year", "Fatalities", "Injuries", "TotalEconomicDamage"))
with(datTotTime, plot(bgn_year, TotalEconomicDamage, pch = NA, type="l",
ylab="Average",
xlab = "Interval"))
lines(datTotTime$bgn_year, datTotTime$TotalEconomicDamage, col = "blue", lwd = 2)
setnames(datTotTime, c("Year", "Fatalities", "Injuries", "TotalEconomicDamage"))
with(datTotTime, plot(Year, TotalEconomicDamage, pch = NA, type="l",
ylab="Average",
xlab = "Interval"))
lines(datTotTime$Year, datTotTime$TotalEconomicDamage, col = "blue", lwd = 2)
with(datTotTime, xyplot(Year, TotalEconomicDamage, pch = NA, type="l",
ylab="Average",
xlab = "Interval"))
lines(datTotTime$Year, datTotTime$TotalEconomicDamage, col = "blue", lwd = 2)
library(lattice)
with(datTotTime, xyplot(Year, TotalEconomicDamage, pch = NA, type="l",
ylab="Average",
xlab = "Interval"))
lines(datTotTime$Year, datTotTime$TotalEconomicDamage, col = "blue", lwd = 2)
with(datTotTime, xyplot(Year, TotalEconomicDamage, pch = NA,
ylab="Average",
xlab = "Interval"))
lines(datTotTime$Year, datTotTime$TotalEconomicDamage, col = "blue", lwd = 2)
with(datTotTime, xyplot(Year, TotalEconomicDamage,
ylab="Average",
xlab = "Interval"))
lines(datTotTime$Year, datTotTime$TotalEconomicDamage, col = "blue", lwd = 2)
with(datTotTime, xyplot(Year, TotalEconomicDamage,
ylab="Average",
xlab = "Interval"))
with(datTotTime, plot(Year, TotalEconomicDamage, pch = NA, type="l",
ylab="Average",
xlab = "Interval"))
lines(datTotTime$Year, datTotTime$TotalEconomicDamage, col = "blue", lwd = 2)
with(datTotTime, plot(Year, TotalEconomicDamage, pch = NA, type="l",
ylab="Million dollars", title="sss",
xlab = "Year"))
lines(datTotTime$Year, datTotTime$TotalEconomicDamage, col = "blue", lwd = 2)
with(datTotTime, plot(Year, TotalEconomicDamage, pch = NA, type="l",
ylab="Million dollars", main="Weather events' Economic Damage by year (1996-2011)",
xlab = "Year"))
lines(datTotTime$Year, datTotTime$TotalEconomicDamage, col = "blue", lwd = 2)
with(datTotTime, plot(Year, TotalEconomicDamage, pch = NA, type="l",
ylab="Million dollars", main="Economic Damage caused by Weather events in U.S.A. (1996-2011)",
xlab = "Year"))
lines(datTotTime$Year, datTotTime$TotalEconomicDamage, col = "blue", lwd = 2)
datTotGeo <- dat1[order(STATE, EVTYPE)]
datTotGeo <- datTotGeo[, by=STATE,
`:=` (totFATALITIES = sum(FATALITIES),
totINJURIES = sum(INJURIES),
totPROPDMG = sum(propdmg0/1000000) +
sum(propdmgK/1000000) +
sum(propdmgM/1000000) +
sum(propdmgB/1000000),
totCROPDMG = sum(cropdmg0/1000000) +
sum(cropdmgK/1000000) +
sum(cropdmgM/1000000) +
sum(cropdmgB/1000000))]
datTotGeo <- datTotGeo[, totECONDMG := totPROPDMG + totCROPDMG]
datTotGeo <- unique(datTotGeo, by = "STATE")
datTotGeo <- datTotGeo[,list(STATE,totFATALITIES,
totINJURIES,totPROPDMG,totCROPDMG, totECONDMG)]
datTotGeo <- datTotGeo[order(totECONDMG, decreasing=TRUE)]
datTotGeo <- head(datTotGeo,10)
datTotGeo$STATE <- as.character(datTotGeo$STATE)
datTotGeo$STATE <- as.factor(datTotGeo$STATE)
print(datTotGeo$STATE)
print(datTotGeo)
print(datTotGeo)
s1 <- c(140,138,150,148,135,142.2)
s2 <- c(132,135,151,146,130,138.8)
var(s1)
var(s2)
data(mtcars)
mean(MTCARS)
mean(mtcars)
mean(mtcars$mpg)
qnorm(0.05)
qnorm(0.95)
m1 <- mean(s1)
m2 <- mean(s2)
p <- t.test(m1, m2, paired = FALSE, alternative="two.sided", var.equal=FALSE)
p <- t.test(m1, m2, paired = FALSE, alternative="two.sided")
s1
s2
p <- t.test(m1, m2, paired = TRUE, alternative="two.sided")
str(s1)
str(s2)
t.test(s1, s2, alternative = "two.sided", paired = F)
p <- t.test(m1, m2, paired = FALSEE, alternative="two.sided")
p <- t.test(m1, m2, paired = FALSE, alternative="two.sided")
p <- t.test(m1, m2, paired = F, alternative="two.sided")
p <- t.test(s1, s2, paired = FALSE, alternative="two.sided")
P
p
p <- t.test(s1, s2, paired = TRUE, alternative="two.sided")
p
p <- t.test(s1, s2, paired = FALSE, alternative="two.sided")
p
p <- t.test(s1, s2, paired = TRUE, alternative="two.sided", var.equal=FALSE)
p
p <- t.test(s1, s2, paired = TRUE, alternative="two.sided", var.equal=TRUE)
p
p <- t.test(s1, s2, paired = TRUE, alternative="two.sided")
p
t.test(c(132,135,151,146,130)-c(140,138,150,148,135),alternative="less", paired=TRUE)
t.test(c(132,135,151,146,130),c(140,138,150,148,135),alternative="less", paired=TRUE)
p <- t.test(s2, s1, paired = TRUE, alternative="two.sided")
p
s1
s1 <- c(140,138,150,148,135)
s2 <- c(132,135,151,146,130)
p <- t.test(s2, s1, paired = TRUE, alternative="two.sided")
p
t.test(c(132,135,151,146,130)-c(140,138,150,148,135),alternative="less")
t.test(c(132,135,151,146,130)-c(140,138,150,148,135),alternative="less", paired=TRUE)
t.test(c(132,135,151,146,130),c(140,138,150,148,135),alternative="less", paired=TRUE)
t.test(c(132,135,151,146,130),c(140,138,150,148,135),alternative="two_sided", paired=TRUE)
t.test(c(132,135,151,146,130),c(140,138,150,148,135),alternative="two.sided", paired=TRUE)
t.test(c(132,135,151,146,130),c(140,138,150,148,135),alternative="two.sided", paired=FALSE)
t.test(s2, s1, paired = TRUE, alternative="two.sided")
t.test(s2, s1, paired = FALSE, alternative="two.sided")
m4 <- mtcars$mpg[mtcars$cyl == 4]
m6 <- mtcars$mpg[mtcars$cyl == 6]
p <- t.test(m4, m6, paired = FALSE, alternative="two.sided", var.equal=FALSE)
p
qt(0.975,8)
pbinom(2,size=4,prob=0.5, lower.tail=FALSE)
pbinom(2,4,prob=0.5,lower.tail=FALSE)
ppois(9, 5, lower.tail = FALSE)
ppois(2, 10/1787, lower.tail = FALSE)
ppois(2, 10/1787, lower.tail = FALSE)*100
ppois(2, 10/1787, lower.tail = TRUE)*100
ppois(2, 1000/1787, lower.tail = TRUE)*100
ppois(2, 1000/1787, lower.tail = FALSE)
ppois(2, 1000/1787, lower.tail = FALSE) - 1
ppois(10, 1787, lower.tail = TRUE)
ppois(10, 17.87, lower.tail = TRUE)
ppois(10, 17.87, lower.tail = TRUE) *100
pt(1.746, 8, lower.tail = TRUE)
pt(1.746, 8, lower.tail = FALSE)
pt(1.746, 8, lower.tail = FALSE)*2
pt(1.746, 8)*2
pt(1.746, 8, lower.tail = TRUE)*2
pt(1.746, 8, lower.tail = FALSE)*2
pt(1.746, 8, lower.tail = FALSE)
pt(1.746, 8, lower.tail = TRUE)
sqrt(2/9)
sqrt(2/9)*1.6568
-4/sqrt(2/9)*1.6568
-4/(sqrt(2/9)*1.6568)
t <- -4/(sqrt(2/9)*1.6568)
t <- -4/(sqrt(2/9)*1.6568*-1)
t
2*pt(t,16)
2*pt(-t,16)
pt(-t,16)
2*pt(-t,16)
pt(-t,16)
pt(t,16)
2*pt(t,16)
2*pt(-t,16)
1.66*0.004
1.66*0.004 +0.01
p <- ((qnorm(0.1) - qnorm(0.95))^2*(0.04)^2)/(0.01)^2
p
n <- (qnorm(.95) + qnorm(.8)) ^ 2 * .04 ^ 2 / .01^2
n
n <- (qnorm(.95) + qnorm(.8)) ^ 2 * .04 ^ 2 / .01^2
p <- ((qnorm(0.9) + qnorm(0.95))^2*(0.04)^2)/(0.01)^2
p
pnorm(1.96)
pnorm(1.96)/2
s1 <- c(140,138,150,148,135)
s2 <- c(132,135,151,146,130)
t.test(s1,s2,alternative="two.sided")
t.test(s1,s2,alternative="two.sided", paired=TRUE)
qt(0.975,8)
pbinom(2,size=4,prob=0.5,lower.tail=FALSE)
ppois(10,17.87,lower.tail=TRUE)
ppois(10,17.87,lower.tail=TRUE)*100
4*(1.6568/3)
2*pt(-2.209,9)
2*pt(-2.209,16)
power <- pnorm(0 + qnorm(.95) * .4, mean = 0.01, sd = .4, lower.tail = FALSE)
power
n <- (-qnorm(.95) + qnorm(.2)) ^ 2 * .04 ^ 2 / .01^2
n
(qnorm(.95) + qnorm(.8)) ^ 2 * .04 ^ 2 / .01^2
n <- (-qnorm(.95) + qnorm(.1)) ^ 2 * .04 ^ 2 / .01^2
n
2*pnorm(-1.96)
2*pnorm(-abs(1.96))
12/(1.6568*(sqrt(2)))
p <- 12/(1.6568*(sqrt(2)))
2*pt(p,16)
2*pt(-p,16)
p <- 12/(1.6568*(sqrt(2)))
2*pt(-p,16)
2*pt(-p,9)
pnorm(0.95)
pnorm(0.95)*0.4
pnorm(0.95)
pnorm(0.95, mean=0.01,sd=0.04)
qnorm(0.95)
qnorm(0.95)*0.004
qnorm(0.95)*0.004
qnorm(0.95)
qnorm(0.95)*0.004
power.t.test(power=.9, delta=.01, sd=.04, type="paired", alt="one.sided")
power.t.test(n=100, delta=.01, sd=.04, type="paired", alt="one.sided")
power.t.test(power=.9, delta=.1, sd=.04, type="one.sample", alt="one.sided")$n
power.t.test(power=.9, delta=.1, sd=.04, type="paired", alt="one.sided")$n
power.t.test(power=.9, delta=.01, sd=.04, type="paired", alt="one.sided")$n
power.t.test(n=100, delta=.01, sd=.04, type="paired", alt="one.sided")$n
power.t.test(n=100, delta=.01, sd=.04, type="paired", alt="one.sided")
x1<- c(140,138,150,148,135)
x2<-c(132,135,151,146,130)
t.test(x1, x2, paired=TRUE, alternative="two.sided, var.equal=TRUE
t.test(x1, x2, paired=TRUE, alternative="two.sided, var.equal=TRUE)
t.test(x1, x2, paired=TRUE, alternative="two.sided, var.equal=TRUE)
x1<- c(140,138,150,148,135)
x2<-c(132,135,151,146,130)
t.test(x1, x2, paired=TRUE, alternative="two.sided", var.equal=TRUE)
