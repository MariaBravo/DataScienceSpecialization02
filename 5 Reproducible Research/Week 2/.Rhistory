colId <- c(1:nrow(idActivityTest))
idActivityTest <- cbind(colId, idActivityTest)
setnames(idActivityTest, c("colId", "idActivity"))
read7 <- read.table("C:/Users/Luchy/Desktop/Coursera/Getting and cleaning data/UCI HAR Dataset/test/subject_test.txt", sep=" ", header=FALSE)
idSubjectTest <- as.data.table(read7)
colId <- c(1:nrow(idSubjectTest))
idSubjectTest <- cbind(colId, idSubjectTest)
setnames(idSubjectTest, c("colId", "idSubject"))
setkey(datActivityTest, colId)
setkey(idActivityTest, colId)
setkey(idSubjectTest, colId)
datTest <- datActivityTest[idActivityTest]
datTest <- datTest[idSubjectTest]
datActivity <- rbind(datTrain, datTest)
listCol <- c("idSubject", "idActivity", grep("mean",namesVarActivity$Activity, value=TRUE), grep("std",namesVarActivity$Activity, value=TRUE))
datActivity <- datActivity[ ,listCol, with = FALSE]
setkeyv(datActivity, c("idSubject", "idActivity"))
##DT <- datActivity[c("idSubject", "idActivity"),by=c("idSubject", "idActivity")]
DT <- data.table(idSubject=character(0), idActivity=character(0))
setkeyv(DT, c("idSubject", "idActivity"))
View(datTest)
View(datTest)
View(datActivity)
View(datActivity)
source('~/.active-rstudio-document', echo=TRUE)
varMean <- paste("Mean", listCol[i], sep="_")
tot1 <- datActivity[,varMean := mean(datActivity[[listCol[i]]]), by=c("idSubject", "idActivity"), with = FALSE]
View(tot1)
View(tot1)
head(tot1)
tail(tot1)
tot1 <- datActivity[,varMean := mean(datActivity$listCol[i]), by=c("idSubject", "idActivity"), with = FALSE]
datActivity$listCol[i]
i
datActivity$listCol[i,]
datActivity$listCol[i]
datActivity$eval(listCol[i])
datActivity$t_BodyAcc_mean_X
View(datActivity)
View(datActivity)
datActivity$t_BodyAcc_mean()_X
source('C:/Users/Luchy/Desktop/Coursera/Getting and cleaning data/script1.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/Luchy/Desktop/Coursera/Getting and cleaning data/script1.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
tot1 <- datActivity[,varMean := mean(datActivity[[listCol[i]]]), by=c("idSubject", "idActivity"), with = FALSE]
View(idSubjectTrain)
View(tot1)
View(tot1)
tail(tot1)
tot1 <- datActivity[,varMean := mean(listCol[i]), by=c("idSubject", "idActivity"), with = FALSE]
warnings()
tot1 <- datActivity[,varMean := mean(tBodyAcc_mean()), by=c("idSubject", "idActivity"), with = FALSE]
listNames <- gsub(char1,"",listNames)
listNames
listNames <- gsub(´(´,"",listNames)
listNames <- gsub(`(`,"",listNames)
listNames <- gsub(`()`,"",listNames)
listNames <- gsub(`(`,"",listNames)
listNames <- gsub("\\(","",listNames)
listNames
source('C:/Users/Luchy/Desktop/Coursera/Getting and cleaning data/script1.R', echo=TRUE)
View(tot1)
View(tot1)
tot1 <- datActivity[,varMean := mean(tBodyAcc_mean_X), by=c("idSubject", "idActivity"), with = FALSE]
View(tot1)
View(tot1)
tot1 <- datActivity[,varMean := mean(listCol[i]), by=c("idSubject", "idActivity"), with = FALSE]
warnings()
listCol[i]
tot1 <- datActivity[,varMean := mean(datActivity$listCol[i]), by=c("idSubject", "idActivity"), with = FALSE]
datActivity$listCol[i]
datActivity$listCol[5]
datActivity$(listCol[5])
tot1 <- datActivity[,varMean := mean(c(listCol[i]), by=c("idSubject", "idActivity"), with = FALSE]
tot1 <- datActivity[,varMean := mean(c(listCol[i])), by=c("idSubject", "idActivity"), with = FALSE]
warnings()
tot1 <- datActivity[,varMean := mean(listCol[i]), by=c("idSubject", "idActivity"), with = FALSE]
listCol[i]
parse(text=listCol[i])
eval(parse(text=listCol[i]))
tot1 <- datActivity[,varMean := mean(eval(parse(text=listCol[i]))), by=c("idSubject", "idActivity"), with = FALSE]
tot1 <- datActivity[,varMean := mean(eval(parse(text=datActivity$listCol[i]))), by=c("idSubject", "idActivity"), with = FALSE]
tot1 <- datActivity[,varMean := mean(eval(parse(text=datActivity$listCol[i]))), by=c("idSubject", "idActivity"), with = FALSE]
tot1 <- datActivity[,varMean := mean(eval(parse(text=listCol[i]))), by=c("idSubject", "idActivity"), with = FALSE]
tot1 <- datActivity[,varMean := mean(datActivity$listCol[i]), by=c("idSubject", "idActivity"), with = FALSE]
warnings()
mean(datActivity$listCol[i])
mean(datActivity$evaluate(listCol[i]))
tot1 <- datActivity[,varMean := mean(c(listCol[i]), by=c("idSubject", "idActivity"), with = FALSE]
tot1 <- datActivity[,varMean := mean(c(listCol[i])), by=c("idSubject", "idActivity"), with = FALSE]
warnings()
tot1 <- datActivity[,list(mean(datActivity$listCol[i])), by=c("idSubject", "idActivity"), with = FALSE]
tot1 <- datActivity[,list(mean(listCol[i])), by=c("idSubject", "idActivity"), with = FALSE]
with(datActivity, mean(listCol[i]))
mean(datActivity$listCol[i]))
mean(datActivity$listCol[i])
mean(get(datActivity$listCol[i]))
with(datActivity, mean(get(listCol[i])))
datActivity[,mean(get(listCol[i])), by=c("idSubject", "idActivity"), with = FALSE]
datActivity[,mean(get(listCol[i])), by=c("idSubject", "idActivity")]
source('C:/Users/Luchy/Desktop/Coursera/Getting and cleaning data/script1.R', echo=TRUE)
tot2 <- tot1[c("idSubject", "idActivity", varMean),]
View(datTrain)
View(tot1)
View(tot1)
source('~/.active-rstudio-document', echo=TRUE)
tot1 <- datActivity[, c("idSubject", "idActivity"),varMean := mean(get(listCol[i])), by=c("idSubject", "idActivity"), with = FALSE]
tot1 <- datActivity[c("idSubject", "idActivity"),varMean := mean(get(listCol[i])), by=c("idSubject", "idActivity"), with = FALSE]
tot1 <- datActivity[,varMean := mean(get(listCol[i])), by=c("idSubject", "idActivity"), with = FALSE]
tot1[c("idSubject", "idActivity", varMean),]
tot1[c("idSubject", "idActivity", varMean),with=FALSE]
tot1[,c("idSubject", "idActivity", varMean),with=FALSE]
source('C:/Users/Luchy/Desktop/Coursera/Getting and cleaning data/script1.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(datActivity)
source('C:/Users/Luchy/Desktop/Coursera/Getting and cleaning data/script1.R', echo=TRUE)
datFinal <- datActivity[,listCol, by=c("idSubject", "idActivity"), with = FALSE]
datFinal <- datActivity[,listCol]
datFinal <- datActivity[,get(listCol)]
datFinal <- datActivity[listCol,]
datFinal <- datActivity[listCol]
datFinal <- datActivity[get(listCol),]
View(datFinal)
source('C:/Users/Luchy/Desktop/Coursera/Getting and cleaning data/scriptAssesment.R', echo=TRUE)
View(datFinal)
datFinal <- datActivity[,get(listColMean)]
View(datActivity)
datFinal <- datActivity[,listColMean]
datFinal <- datActivity[,listColMean, with=FALSE]
View(datFinal)
source('C:/Users/Luchy/Desktop/Coursera/Getting and cleaning data/scriptAssesment.R', echo=TRUE)
View(datFinal)
source('C:/Users/Luchy/Desktop/Coursera/Getting and cleaning data/scriptAssesment.R', echo=TRUE)
View(datFinal)
unique(datFinal)
datFinal <- unique(datActivity[,listColMean, with=FALSE])
View(datFinal)
source('C:/Users/Luchy/Desktop/Coursera/Getting and cleaning data/scriptAssesment.R', echo=TRUE)
View(datFinal)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
mkdir
library(KernSmooth)
q()
library(datasets)
data(iris)
apply(iris[, 1:4], 2, mean)
Rprof()
Rprof("sss.xjj")
Rprof("tryprofiler.R")
summaryRprof()
y <- 10
x1 <- 5
x2 <- 7
Rprof("tryprofiler.R")
summaryRprof()
lm
x1 <- rnorm(5)
x1 <- rnorm(500)
x2 <- rnorm(500)
summaryRprof()
x1 <- rnorm(500000)
x2 <- rnorm(500000)
summaryRprof()
summaryRprof()
Rprof("tryprofiler.R")
summaryRprof()
summaryRprof("tryprofiler.R")
summaryRprof("tryprofiler.R")
Rprof("tryprofiler.R")
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
x1 <- rnorm(500)
x2 <- rnorm(500)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
x2 <- 100
x1 <- 100
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
summaryRprof()
?seed
?seed()
seed()
?? seed()
?set.seed()
??set.seed()
examples(set.seed)
example(set.seed)
? RNGkind()
? RNGkind()
runif(1); .Random.seed[1:6]; runif(1); .Random.seed[1:6]
runif(1);
runif(1);
runif(1);
runif(5);
runif(5);
runif(5);
runif(15);
runif(8879999975);
runif(887999997);
runif(8879997);
runif(15);
runif(15);
runif(1);
runif(2);
.Random.seed
rm(.Random.seed); runif(1); .Random.seed[1:6]
runif(1);
rm(.Random.seed); runif(1); .Random.seed[1:6]
runif(1);
runif(1);
runif(1);
runif(1);
runif(1);
.Random.seed
rm(.Random.seed); runif(1); .Random.seed[1:6]
runif(1);
.Random.seed[1:6]
runif(1);
.Random.seed
set.seed(15,87)
set.seed(17)
.Random.seed
runif(1);
runif(1);
runif(1);
runif(1);
runif(1);
rm(.Random.seed); runif(1); .Random.seed[1:6]
runif(1, 5.0, 7.5)
runif(1, 5.0, 7.5)
runif(1, 5.0, 7.5)
runif(1, 5.0, 7.5)
runif(1, 5.0, 7.5)
runif(1, 5.0, 7.5)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
y <- 10
x1 <-  50
x2 <- 40
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
by.total
Rprof()
fit <- lm(y ~ x1 + x2)
by.total
summaryRprof
summaryRprof()
fit <- lm(y ~ x1 + x2)
library(datasets)
Rprof()
library(datasets)
Rprof("zzz.txt")
y <- 10
x1 <- 50
x2 <- 20
library(datasets)
Rprof("zzz.txt")
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
summaryRprof("zzz.txt")
x2 <- 207864
x1 <- 5078469
y <- 107597997
summaryRprof("zzz.txt")
library(datasets)
Rprof("zzz.txt")
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
summaryRprof("zzz.txt")
example(glm)
summaryRprof("zzz.txt")
fit <- lm(y ~ x1 + x2)
library(datasets)
Rprof("zzz.txt")
fit <- lm(y ~ x1 + x2)
summaryRprof("zzz.txt")
install.packages("sqldf")
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
mean(temp)
?mean
temp$X * temp$Prob
temp(1,1)
temp[1,1]
temp[[1]]
temp[[X]]
temp[X
temp[X]
temp[[1]] * temp[[2]]
temp[[2]]
temp[[1]]
temp[[3]]
temp[[4]]
0.1 + 0.4 + 0.9 + 1.6
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
mean(temp)
11/4
d <- data.frame(temp)
mean(d)
d[,mean]
apply()
apply(d, mean)
help apply
install.packages("knitr")
This is an R Markdown document. Markdown is a simple formatting syntax for authoring web pages (click the **Help** toolbar button for more details on using R Markdown).
library(datasets)
data(airquality)
ggplot2
install.packages("ggplot2")
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality)
airquality
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
airquality
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
movies
summary(movies)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
library(ggplot2)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + stat_smooth("loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stat_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
panel.loess(x, y, span = 2/3, degree = 1,
family = c("symmetric", "gaussian"),
evaluation = 50,
lwd, lty, col, col.line, type,
horizontal = FALSE,
..., identifier = "loess")
library(lattice)
panel.loess(x, y, span = 2/3, degree = 1,
family = c("symmetric", "gaussian"),
evaluation = 50,
lwd, lty, col, col.line, type,
horizontal = FALSE,
..., identifier = "loess")
panel.loess(x, y, span = 2/3, degree = 1,
family = c("symmetric", "gaussian"),
evaluation = 50,
lwd, lty, col, col.line, type,
horizontal = FALSE, identifier = "loess")
library(ggplot2)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
?xyplot
library(lattice)
?xyplot
library(ggplot2)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
warnings
warnings()
warn <- 0
warn <- -1
verbose <- FALSE
library(data.table)
library(lubridate)
library(lattice)
library(datasets)
## Simple scatterplot
xyplot(Ozone ~ Wind, data = airquality)
zz <- xyplot(Ozone ~ Wind, data = airquality)
class(zz)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?llpoints
library(lattice)
?llpoints
?lpoints
?axis
?text
?lines
?lpoints
?axis
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
trellis.par.set
?trellis.par.set
?print.tellis
?par
?splom
library(datasets)
data(airquality)
head(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = factor(Month) ~.)
airquality
? facets
library(ggplot2)
? facets
qplot(Wind, Ozone, data = airquality, facets = factor(Month) ~.)
airquality
str(airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, smooth = "loess")
?smooth
qplot(votes, rating, data = movies) + geom_smooth()
?geom_smooth
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + stat_smooth("loess")
setwd("C:/Users/Luchy/Desktop/Coursera/Reproducible Research")
